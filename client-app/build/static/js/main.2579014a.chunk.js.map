{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","services/localstorageService.js","utils/constants/userConstants.js","components/DashboardNavbar.js","services/authService.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","components/dashboard/Budget.js","components/dashboard/LatestOrders.js","components/dashboard/LatestProducts.js","utils/constants/employeeConstants.js","services/employeeService.js","components/customer/EmployeeListDashboard.js","components/dashboard/EmployeeData.js","components/dashboard/Sales.js","components/dashboard/TasksProgress.js","components/dashboard/TotalCustomers.js","components/dashboard/TrafficByDevice.js","utils/constants/dashboardConstants.js","services/dashboardService.js","pages/Dashboard.js","pages/Register.js","pages/Login.js","pages/EmployeeLogin.js","pages/NotFound.js","components/product/ProductListToolbar.js","components/product/ProductCard.js","__mocks__/products.js","pages/ProductList.js","components/settings/SettingsPassword.js","pages/Settings.js","components/customer/EmployeeAdd.js","components/customer/CustomerListResults.js","components/customer/CustomerListToolbar.js","pages/EmployeeList.js","pages/EmployeeDashboard.js","routes.js","utils/constants/adminConstants.js","store/store.js","reducers/authReducer.js","reducers/employeeReducer.js","reducers/dashboardReducer.js","reducers/userReducer.js","reducers/adminReducer.js","utils/responseHandling/AxiosConfig.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","LocalStorageService","_service","getService","_setAccessToken","access_token","localStorage","setItem","getAccessToken","getItem","_setRefreshToken","refresh_token","getRefreshToken","clearToken","removeItem","USER_LOADING","USER_LIST_SUCCESS","USER_SIGNIN_LOADING","USER_SIGNIN_SUCCESS","USER_SIGNIN_ERROR","USER_SINGLE_SUCCESS","USER_ERROR","USER_UPDATE_SUCCESS","USER_STATUS_UPDATE_SUCCESS","USER_DELETE_SUCCESS","USER_LOGOUT","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","dispatch","useDispatch","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","IconButton","color","Badge","badgeContent","length","variant","onClick","type","lgUp","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","items","BarChartIcon","DashboardSidebar","onMobileClose","openMobile","useEffect","user","JSON","parse","content","flexDirection","alignItems","p","Avatar","cursor","Typography","firstName","lastName","email","Divider","List","map","item","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","navigate","useNavigate","isMobileNavOpen","setMobileNavOpen","authState","useSelector","state","userSignin","replace","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","AccountProfile","Card","CardContent","gutterBottom","moment","format","CardActions","fullWidth","states","value","label","AccountProfileDetails","phone","country","values","setValues","handleChange","event","target","name","onSubmit","axios","method","url","data","autoComplete","noValidate","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","helperText","onChange","required","select","SelectProps","native","option","Account","Helmet","minHeight","Container","maxWidth","lg","Budget","employeeCount","red","uuid","subtract","EMPLOYEE_LOADING","EMPLOYEE_GET_SUCCESS","EMPLOYEE_ERROR","accessToken","getEmployees","get","headers","Authorization","payload","response","message","extendedIcon","marginRight","EmployeeListDashboard","customers","selectedCustomerIds","limit","setLimit","page","setPage","Table","TableHead","TableRow","TableCell","TableBody","slice","customer","hover","selected","id","city","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","rowsPerPage","rowsPerPageOptions","EmployeeData","employeeData","employees","loading","pt","Sales","useTheme","indigo","grey","divider","action","endIcon","TasksProgress","clockedOutCount","TotalCustomers","clockedInCount","green","TrafficByDevice","datasets","TodayClockedInCount","TodayClockedOutCount","orange","hoverBorderColor","labels","animation","cutoutPercentage","layout","legend","maintainAspectRatio","responsive","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","devices","PersonIcon","position","textAlign","style","DASHBOARD_DATA_LOADING","DASHBOARD_DATA_SUCCESS","DASHBOARD_DATA_ERROR","getDashboardData","Dashboard","dashboardData","dashboard","console","log","sm","xl","Register","initialValues","password","policy","validationSchema","Yup","shape","max","oneOf","input","resetForm","post","swal","button","errors","handleBlur","handleSubmit","touched","isSubmitting","mb","error","onBlur","ml","Checkbox","checked","Link","underline","FormHelperText","disabled","Login","stringify","EmployeeLogin","NotFound","align","marginTop","ProductListToolbar","mx","mt","InputProps","startAdornment","InputAdornment","SvgIcon","placeholder","ProductCard","product","pb","media","description","pl","totalDownloads","createdAt","ProductList","products","Pagination","SettingsPassword","confirm","SettingsView","EmployeeAdd","jobDescription","weeklyPerformance","CustomerListResults","classes","minWidth","Fab","aria-label","className","CustomerListToolbar","Navigate","EmployeeList","EmployeeDashboard","alert","routes","element","children","Settings","ADMIN_LOADING","ADMIN_PASSWORD_RESET_SUCCESS","ADMIN_ERROR","initialState","reducer","combineReducers","metadata","employee","redirect","userData","users","filter","_id","adminData","modalClose","admin","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","localStorageService","interceptors","request","use","token","Promise","reject","originalRequest","status","_retry","refreshToken","then","res","defaults","AxiosConfig","App","routing","useRoutes","ThemeProvider","maxSnack","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2579014a.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2'\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c'\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","const Logo = (props) => (\r\n  <img\r\n    alt=\"Logo\"\r\n    src=\"/static/logo.svg\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Logo;\r\n","const LocalStorageService = (function () {\r\n  var _service;\r\n  function _getService() {\r\n    if (!_service) {\r\n      _service = this;\r\n      return _service;\r\n    }\r\n    return _service;\r\n  }\r\n  function _setAccessToken(access_token) {\r\n    localStorage.setItem(\"access_token\", access_token);\r\n  }\r\n  function _setRefreshToken(refresh_token) {\r\n    localStorage.setItem(\"refresh_token\", refresh_token);\r\n  }\r\n\r\n  function _getAccessToken() {\r\n    return localStorage.getItem(\"access_token\");\r\n  }\r\n  function _getRefreshToken() {\r\n    return localStorage.getItem(\"refresh_token\");\r\n  }\r\n  function _clearToken() {\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n  }\r\n  return {\r\n    getService: _getService,\r\n    _setAccessToken: _setAccessToken,\r\n    getAccessToken: _getAccessToken,\r\n    _setRefreshToken: _setRefreshToken,\r\n    getRefreshToken: _getRefreshToken,\r\n    clearToken: _clearToken,\r\n  };\r\n})();\r\nexport default LocalStorageService;\r\n","export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_ERROR = \"USER_LIST_ERROR\";\r\n\r\nexport const USER_SIGNIN_LOADING = \"USER_SIGNIN_LOADING\";\r\nexport const USER_SIGNIN_SUCCESS = \"USER_SIGNIN_SUCCESS\";\r\nexport const USER_SIGNIN_ERROR = \"USER_SIGNIN_ERROR\";\r\n\r\nexport const USER_REGISTER_LOADING = \"USER_REGISTER_LOADING\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_ERROR = \"USER_REGISTER_ERROR\";\r\n\r\nexport const USER_SINGLE_LOADING = \"USER_SINGLE_LOADING\";\r\nexport const USER_SINGLE_SUCCESS = \"USER_SINGLE_SUCCESS\";\r\nexport const USER_SINGLE_ERROR = \"USER_SINGLE_ERROR\";\r\n\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USER_DELETE_LOADING = \"USER_DELETE_LOADING\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_STATUS_UPDATE_SUCCESS = \"USER_STATUS_UPDATE_SUCCESS\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_ERROR = \"USER_DELETE_ERROR\";\r\n\r\nexport const PASSWORD_RESET = \"PASSWORD_RESET\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from './Logo';\r\nimport { logout } from 'src/services/authService';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\nconst dispatch= useDispatch();\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Hidden lgDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\" onClick={()=>dispatch(logout())}>\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n","import axios from \"axios\";\r\nimport LocalStorageService from \"./localstorageService\";\r\nimport {\r\n  USER_SIGNIN_LOADING,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_ERROR,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_LOADING,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_ERROR\r\n} from \"../utils/constants/userConstants\";\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst login = (input) => async (dispatch) => { \r\n  dispatch({\r\n    type: USER_SIGNIN_LOADING,\r\n    payload: input,\r\n  });\r\n  try {\r\n    const { data } = await axios.post('/api/v1/panel/login', input);\r\n    localStorage.setItem('userData',JSON.stringify(data.data.user))\r\n    LocalStorageService._setAccessToken(data.data.accessToken);\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data.data.accessToken });\r\n\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_ERROR, payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nconst register = (input) => async (dispatch) => {\r\n  dispatch({\r\n    type: USER_REGISTER_LOADING,\r\n    payload: input,\r\n  });\r\n  try {\r\n    const { data } = await axios.post('/api/v1/panel/register', \r\n      input\r\n    );\r\n    swal({\r\n      title: \"Success\",\r\n      text:data.message,\r\n      icon: \"success\",\r\n      button: \"Ok\",\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data.data});\r\n  } catch (error) {\r\n    dispatch({ type: USER_REGISTER_ERROR, payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nconst logout =() =>  async (dispatch) =>{\r\n  LocalStorageService.clearToken();\r\n  dispatch({type:USER_LOGOUT})\r\n}\r\n\r\nexport { login,register,logout };\r\n","import {\r\n  NavLink as RouterLink,\r\n  matchPath,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ListItem } from '@material-ui/core';\r\n\r\nconst NavItem = ({\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const location = useLocation();\r\n  const active = href ? !!matchPath({\r\n    path: href,\r\n    end: false\r\n  }, location.pathname) : false;\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      sx={{\r\n        display: 'flex',\r\n        py: 0\r\n      }}\r\n      {...rest}\r\n    >\r\n      <Button\r\n        component={RouterLink}\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontWeight: 'medium',\r\n          justifyContent: 'flex-start',\r\n          letterSpacing: 0,\r\n          py: 1.25,\r\n          textTransform: 'none',\r\n          width: '100%',\r\n          ...(active && {\r\n            color: 'primary.main'\r\n          }),\r\n          '& svg': {\r\n            mr: 1\r\n          }\r\n        }}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon size=\"20\" />\r\n        )}\r\n        <span>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  Settings as SettingsIcon,\r\n  User as UserIcon,\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  // {\r\n  //   href: '/app/employees',\r\n  //   icon: UserIcon,\r\n  //   title: 'Employees'\r\n  // },\r\n  // {\r\n  //   href: '/app/account',\r\n  //   icon: UserIcon,\r\n  //   title: 'Account'\r\n  // },\r\n  // {\r\n  //   href: '/app/settings',\r\n  //   icon: SettingsIcon,\r\n  //   title: 'Settings'\r\n  // },\r\n];\r\n\r\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n  \r\n  const user = JSON.parse(localStorage.getItem('userData'))\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Avatar\r\n          component={RouterLink}\r\n          src='/static/images/avatars/avatar_6.png'\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 64,\r\n            height: 64\r\n          }}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.firstName+\" \"+user.lastName}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.email}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box sx={{ flexGrow: 1 }} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256,\r\n              top: 64,\r\n              height: 'calc(100% - 64px)'\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboardSidebar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nDashboardSidebar.defaultProps = {\r\n  onMobileClose: () => { },\r\n  openMobile: false\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","import { useEffect, useState } from 'react';\r\nimport { Outlet ,useNavigate} from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport DashboardNavbar from './DashboardNavbar';\r\nimport DashboardSidebar from './DashboardSidebar';\r\n\r\nconst DashboardLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst DashboardLayoutWrapper = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  })\r\n);\r\n\r\nconst DashboardLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst DashboardLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst DashboardLayout = () => {\r\n  const navigate= useNavigate();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { authState } = userSignin;\r\n\r\n  \r\n  useEffect(()=>{\r\n    if(!authState)\r\n    navigate('/login', { replace: true });\r\n  },[authState])\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport Logo from './Logo';\r\n\r\nconst MainNavbar = (props) => (\r\n  <AppBar\r\n    elevation={0}\r\n    {...props}\r\n  >\r\n    <Toolbar sx={{ height: 64 }}>\r\n      <RouterLink to=\"/\">\r\n        <Logo />\r\n      </RouterLink>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nexport default MainNavbar;\r\n","import { Outlet, useNavigate } from \"react-router-dom\";\r\nimport { experimentalStyled } from \"@material-ui/core\";\r\nimport MainNavbar from \"./MainNavbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst MainLayoutRoot = experimentalStyled(\"div\")(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n  display: \"flex\",\r\n  height: \"100%\",\r\n  overflow: \"hidden\",\r\n  width: \"100%\",\r\n}));\r\n\r\nconst MainLayoutWrapper = experimentalStyled(\"div\")({\r\n  display: \"flex\",\r\n  flex: \"1 1 auto\",\r\n  overflow: \"hidden\",\r\n  paddingTop: 64,\r\n});\r\n\r\nconst MainLayoutContainer = experimentalStyled(\"div\")({\r\n  display: \"flex\",\r\n  flex: \"1 1 auto\",\r\n  overflow: \"hidden\",\r\n});\r\n\r\nconst MainLayoutContent = experimentalStyled(\"div\")({\r\n  flex: \"1 1 auto\",\r\n  height: \"100%\",\r\n  overflow: \"auto\",\r\n});\r\n\r\nconst MainLayout = () => {\r\n  const navigate = useNavigate();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { authState } = userSignin;\r\n\r\n  useEffect(() => {\r\n    if (authState) navigate(\"/app/employeedashboard\", { replace: true });\r\n\r\n    //navigate('/app/dashboard', { replace: true });\r\n  }, [authState]);\r\n\r\n  return (\r\n    <MainLayoutRoot>\r\n      <MainNavbar />\r\n      <MainLayoutWrapper>\r\n        <MainLayoutContainer>\r\n          <MainLayoutContent>\r\n            <Outlet />\r\n          </MainLayoutContent>\r\n        </MainLayoutContainer>\r\n      </MainLayoutWrapper>\r\n    </MainLayoutRoot>\r\n  );\r\n};\r\nexport default MainLayout;\r\n","import moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst AccountProfile = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.avatar}\r\n          sx={{\r\n            height: 100,\r\n            width: 100\r\n          }}\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${user.city} ${user.country}`}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        Upload picture\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default AccountProfile;\r\n","import { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst AccountProfileDetails = (props) => {\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  const onSubmit  = async () => {\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: `/api/v1/panel/update?id=6076af733b1c0f0f743d6c39`,\r\n      data : values\r\n    });\r\n  }\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      {...props}\r\n    > \r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick = {() => onSubmit()}\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccountProfileDetails;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport AccountProfile from 'src/components/account/AccountProfile';\r\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\r\n\r\nconst Account = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Account | Employee</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Account;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst Budget = (props) => {\r\n  return(\r\n  <Card\r\n    sx={{ height: '100%' }}\r\n    {...props}\r\n  >\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            Employees\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            {props.employeeCount}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: red[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <PeopleIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n          }\r\nexport default Budget;\r\n","import moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst orders = [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n\r\nconst LatestOrders = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader title=\"Latest Orders\" />\r\n    <Divider />\r\n    <PerfectScrollbar>\r\n      <Box sx={{ minWidth: 800 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                Order Ref\r\n              </TableCell>\r\n              <TableCell>\r\n                Customer\r\n              </TableCell>\r\n              <TableCell sortDirection=\"desc\">\r\n                <Tooltip\r\n                  enterDelay={300}\r\n                  title=\"Sort\"\r\n                >\r\n                  <TableSortLabel\r\n                    active\r\n                    direction=\"desc\"\r\n                  >\r\n                    Date\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n              <TableCell>\r\n                Status\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow\r\n                hover\r\n                key={order.id}\r\n              >\r\n                <TableCell>\r\n                  {order.ref}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {order.customer.name}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    color=\"primary\"\r\n                    label={order.status}\r\n                    size=\"small\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n    </PerfectScrollbar>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestOrders;\r\n","import { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst products = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst LatestProducts = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader\r\n      subtitle={`${products.length} in total`}\r\n      title=\"Latest Products\"\r\n    />\r\n    <Divider />\r\n    <List>\r\n      {products.map((product, i) => (\r\n        <ListItem\r\n          divider={i < products.length - 1}\r\n          key={product.id}\r\n        >\r\n          <ListItemAvatar>\r\n            <img\r\n              alt={product.name}\r\n              src={product.imageUrl}\r\n              style={{\r\n                height: 48,\r\n                width: 48\r\n              }}\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={product.name}\r\n            secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n          />\r\n          <IconButton\r\n            edge=\"end\"\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n    <Divider />\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestProducts;\r\n","export const EMPLOYEE_LOADING = \"EMPLOYEE_LOADING\";\r\nexport const EMPLOYEE_ADD_SUCCESS = \"EMPLOYEE_ADD_SUCCESS\";\r\nexport const EMPLOYEE_GET_SUCCESS = \"EMPLOYEE_GET_SUCCESS\";\r\nexport const EMPLOYEE_UPDATE_SUCCESS = \"EMPLOYEE_UPDATE_SUCCESS\";\r\nexport const EMPLOYEE_ERROR = \"EMPLOYEE_ERROR\";\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_ERROR,\r\n  USER_SIGNIN_ERROR,\r\n  USER_SIGNIN_SUCCESS,\r\n} from \"src/utils/constants/userConstants\";\r\nimport {\r\n  EMPLOYEE_LOADING,\r\n  EMPLOYEE_ADD_SUCCESS,\r\n  EMPLOYEE_ERROR,\r\n  EMPLOYEE_GET_SUCCESS,\r\n} from \"../utils/constants/employeeConstants\";\r\nimport LocalStorageService from \"./localstorageService\";\r\n\r\nconst accessToken = localStorage.getItem(\"access_token\");\r\n\r\nconst loginEmployee = (input) => async (dispatch) => {\r\n  dispatch({\r\n    type: EMPLOYEE_LOADING,\r\n    payload: input,\r\n  });\r\n  try {\r\n    const { data } = await axios.post(\"/api/v1/panel/employee/login\", input);\r\n    localStorage.setItem(\"userData\", JSON.stringify(data.data.user));\r\n    LocalStorageService._setAccessToken(data.data.accessToken);\r\n    debugger;\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data.data.accessToken });\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_ERROR, payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nconst addEmployee = (input) => async (dispatch) => {\r\n  dispatch({\r\n    type: EMPLOYEE_LOADING,\r\n    payload: input,\r\n  });\r\n  try {\r\n    const { data } = await axios.post(\"/api/v1/panel/employee/add\", input);\r\n    dispatch({ type: EMPLOYEE_ADD_SUCCESS, payload: data.data });\r\n  } catch (error) {\r\n    dispatch({ type: EMPLOYEE_ERROR, payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nconst getEmployees = () => async (dispatch) => {\r\n  dispatch({\r\n    type: EMPLOYEE_LOADING,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(\"/api/v1/panel/employee/list?search=\", {\r\n      headers: {\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n    dispatch({ type: EMPLOYEE_GET_SUCCESS, payload: data.data });\r\n  } catch (error) {\r\n    dispatch({ type: EMPLOYEE_ERROR, payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nexport { addEmployee, getEmployees, loginEmployee };\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst EmployeeListDashboard = ({ customers, ...rest }) => {\r\n\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box >\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Country\r\n                </TableCell>\r\n                <TableCell>\r\n                  City\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.country}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.city}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onPageChange={handlePageChange}\r\n        onRowsPerPageChange={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nEmployeeListDashboard.propTypes = {\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default EmployeeListDashboard;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport { useDispatch ,useSelector} from 'react-redux';\r\nimport { getEmployees } from 'src/services/employeeService';\r\nimport { useEffect } from 'react';\r\nimport EmployeeListDashboard from '../customer/EmployeeListDashboard';\r\n\r\nconst EmployeeData = () => {\r\n\r\nconst dispatch =useDispatch();\r\nconst employeeData = useSelector((state) => state.employeeData);\r\nconst { loading, employees } = employeeData;\r\n\r\n  useEffect(()=>{\r\n    dispatch(getEmployees())\r\n  },[]);\r\n\r\n\r\n  return (\r\n  <>\r\n    <Helmet>\r\n      <title>Employee | Manage Employees</title>\r\n    </Helmet>\r\n      <Container maxWidth={false}>\r\n        <Box sx={{ pt: 3 }}>\r\n          <EmployeeListDashboard customers={employees} />\r\n        </Box>\r\n      </Container>\r\n  </>\r\n);\r\n    }\r\n\r\nexport default EmployeeData;\r\n","import { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport EmployeeData from './EmployeeData';\r\n\r\nconst Sales = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Employees Overview\"\r\n      />\r\n          <EmployeeData/>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst TasksProgress = (props) => (\r\n  <Card\r\n    sx={{ height: '100%' }}\r\n    {...props}\r\n  >\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            Clocked Out\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n             {props.clockedOutCount} \r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: red[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <PeopleIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TasksProgress;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst TotalCustomers = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            Clocked In\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n           {props.clockedInCount} \r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: green[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <PeopleIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TotalCustomers;\r\n","import { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/People';\r\n\r\nconst TrafficByDevice = (props) => {\r\n  const theme = useTheme();\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [props.employeeCount, props.TodayClockedInCount, props.TodayClockedOutCount],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Employees', 'Clocked In', 'Clocked Out']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Employees',\r\n      value: props.employeeCount,\r\n      icon: PersonIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Clocked In',\r\n      value: props.TodayClockedInCount,\r\n      icon: PersonIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Clocked Out',\r\n      value: props.TodayClockedOutCount,\r\n      icon: PersonIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader title=\"Today\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 300,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 2\r\n          }}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              sx={{\r\n                p: 1,\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","export const DASHBOARD_DATA_LOADING = \"DASHBOARD_DATA_LOADING\";\r\nexport const DASHBOARD_DATA_SUCCESS = \"DASHBOARD_DATA_SUCCESS\";\r\nexport const DASHBOARD_DATA_ERROR = \"DASHBOARD_DATA_ERROR\";\r\n","import axios from \"axios\";\r\nimport {\r\n  DASHBOARD_DATA_LOADING,\r\n  DASHBOARD_DATA_SUCCESS,\r\n  DASHBOARD_DATA_ERROR,\r\n} from \"../utils/constants/dashboardConstants\";\r\nconst accessToken = localStorage.getItem(\"access_token\");\r\n\r\nconst getDashboardData = () => async (dispatch) => {\r\n  dispatch({\r\n    type: DASHBOARD_DATA_LOADING,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(\"/api/v1/panel/dashboard/get\", {\r\n      headers: {\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n    dispatch({ type: DASHBOARD_DATA_SUCCESS, payload: data.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DASHBOARD_DATA_ERROR,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst clockInEmployee = () => async (dispatch) => {\r\n  dispatch({\r\n    type: DASHBOARD_DATA_LOADING,\r\n  });\r\n  try {\r\n    alert(\"hey\");\r\n    // const { data } = await axios.get('/api/v1/panel/dashboard/get',{\r\n    //   headers: {\r\n    //     Authorization: accessToken,\r\n    //   },\r\n    // });\r\n    // dispatch({ type: DASHBOARD_DATA_SUCCESS, payload: data.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DASHBOARD_DATA_ERROR,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport { getDashboardData, clockInEmployee };\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Budget from 'src/components/dashboard//Budget';\r\nimport { useDispatch ,useSelector} from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\r\nimport LatestProducts from 'src/components/dashboard//LatestProducts';\r\nimport Sales from 'src/components/dashboard//Sales';\r\nimport TasksProgress from 'src/components/dashboard//TasksProgress';\r\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\r\nimport TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\r\nimport { getDashboardData } from 'src/services/dashboardService';\r\n\r\nconst Dashboard = () => {\r\n  const dispatch =useDispatch();\r\nconst dashboardData = useSelector((state) => state.dashboardData);\r\nconst { loading, dashboard } = dashboardData;\r\n\r\n  useEffect(()=>{\r\n    dispatch(getDashboardData())\r\n  },[]);\r\n\r\n  console.log(dashboard.employeeCount)\r\n  return(\r\n  <>\r\n    <Helmet>\r\n      <title>Dashboard | Employee </title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={6}\r\n            xl={4}\r\n            xs={12}\r\n          >\r\n            <Budget {...dashboard} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={6}\r\n            xl={4}\r\n            xs={12}\r\n          >\r\n            <TotalCustomers  {...dashboard} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={6}\r\n            xl={4}\r\n            xs={12}\r\n          >\r\n            <TasksProgress {...dashboard} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={12}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={4}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice {...dashboard} sx={{ height: '100%' }} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n    }\r\n\r\nexport default Dashboard;\r\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { register } from 'src/services/authService';\r\n\r\n\r\nconst Register = () => {\r\n  const dispatch =useDispatch();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { loading } = userSignin;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register | Employee</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy:false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().min(6).max(255).required('password is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n            onSubmit={(values, { resetForm }) => {\r\n              delete values.policy; \r\n              resetForm();\r\n              dispatch(register(values));\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    ml: -1\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { Helmet } from 'react-helmet';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { login } from 'src/services/authService';\r\n\r\nconst Login = () => {\r\n  const dispatch =useDispatch();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { loading } = userSignin;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | Employee</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={(values) => {\r\n              //dispatch(loginEmployee(values))\r\n             dispatch(login(values))\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                   Login\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { loginEmployee } from \"src/services/employeeService\";\r\n\r\nconst EmployeeLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { loading } = userSignin;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | Employee</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              password: Yup.string().max(255).required(\"Password is required\"),\r\n            })}\r\n            onSubmit={(values) => {\r\n              dispatch(loginEmployee(values));\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Login\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeLogin;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | Employee</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"h1\"\r\n        >\r\n          404: The page you are looking for isn’t here\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"subtitle2\"\r\n        >\r\n          You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt=\"Under development\"\r\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst ProductListToolbar = (props) => (\r\n  <Box {...props}>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n      }}\r\n    >\r\n      <Button>\r\n        Import\r\n      </Button>\r\n      <Button sx={{ mx: 1 }}>\r\n        Export\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Add product\r\n      </Button>\r\n    </Box>\r\n    <Box sx={{ mt: 3 }}>\r\n      <Card>\r\n        <CardContent>\r\n          <Box sx={{ maxWidth: 500 }}>\r\n            <TextField\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SvgIcon\r\n                      fontSize=\"small\"\r\n                      color=\"action\"\r\n                    >\r\n                      <SearchIcon />\r\n                    </SvgIcon>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              placeholder=\"Search product\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nexport default ProductListToolbar;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst ProductCard = ({ product, ...rest }) => (\r\n  <Card\r\n    sx={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }}\r\n    {...rest}\r\n  >\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          pb: 3\r\n        }}\r\n      >\r\n        <Avatar\r\n          alt=\"Product\"\r\n          src={product.media}\r\n          variant=\"square\"\r\n        />\r\n      </Box>\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        gutterBottom\r\n        variant=\"h4\"\r\n      >\r\n        {product.title}\r\n      </Typography>\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        {product.description}\r\n      </Typography>\r\n    </CardContent>\r\n    <Box sx={{ flexGrow: 1 }} />\r\n    <Divider />\r\n    <Box sx={{ p: 2 }}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          item\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          <AccessTimeIcon color=\"action\" />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            display=\"inline\"\r\n            sx={{ pl: 1 }}\r\n            variant=\"body2\"\r\n          >\r\n            Updated 2hr ago\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          <GetAppIcon color=\"action\" />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            display=\"inline\"\r\n            sx={{ pl: 1 }}\r\n            variant=\"body2\"\r\n          >\r\n            {product.totalDownloads}\r\n            {' '}\r\n            Downloads\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nProductCard.propTypes = {\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    createdAt: '27/03/2019',\r\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    media: '/static/images/products/product_1.png',\r\n    title: 'Dropbox',\r\n    totalDownloads: '594'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '31/03/2019',\r\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    media: '/static/images/products/product_2.png',\r\n    title: 'Medium Corporation',\r\n    totalDownloads: '625'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '03/04/2019',\r\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    media: '/static/images/products/product_3.png',\r\n    title: 'Slack',\r\n    totalDownloads: '857'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    media: '/static/images/products/product_4.png',\r\n    title: 'Lyft',\r\n    totalDownloads: '406'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\r\n    media: '/static/images/products/product_5.png',\r\n    title: 'GitHub',\r\n    totalDownloads: '835'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    media: '/static/images/products/product_6.png',\r\n    title: 'Squarespace',\r\n    totalDownloads: '835'\r\n  }\r\n];\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Pagination\r\n} from '@material-ui/core';\r\nimport ProductListToolbar from 'src/components/product/ProductListToolbar';\r\nimport ProductCard from 'src/components/product//ProductCard';\r\nimport products from 'src/__mocks__/products';\r\n\r\nconst ProductList = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Products | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <ProductListToolbar />\r\n        <Box sx={{ pt: 3 }}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            {products.map((product) => (\r\n              <Grid\r\n                item\r\n                key={product.id}\r\n                lg={4}\r\n                md={6}\r\n                xs={12}\r\n              >\r\n                <ProductCard product={product} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 3\r\n          }}\r\n        >\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={3}\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default ProductList;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst SettingsPassword = (props) => {\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form {...props}>\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SettingsPassword;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport SettingsNotifications from 'src/components/settings/SettingsNotifications';\r\nimport SettingsPassword from 'src/components/settings/SettingsPassword';\r\n\r\nconst SettingsView = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Settings | Employee Management</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ pt: 3 }}>\r\n          <SettingsPassword />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default SettingsView;\r\n","import { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst EmployeeAdd = (props) => {\r\n  const [values, setValues] = useState({\r\n    name:'',\r\n    email:'',\r\n    country:'',\r\n    city:'',\r\n    jobDescription:'',\r\n    weeklyPerformance:'',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onSubmit  = async () => {\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: '/api/v1/panel/employee/add',\r\n      data : values\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form {...props}>\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Add employee\"\r\n          title=\"Employees\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n        <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n            \r\n            label=\"Employee Name\"\r\n            margin=\"normal\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            value={values.name}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid>\r\n          <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n            \r\n            label=\"email\"\r\n            margin=\"normal\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid>\r\n          <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n            \r\n            label=\"Country\"\r\n            margin=\"normal\"\r\n            name=\"country\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            value={values.country}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid>\r\n          <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n            \r\n            label=\"City\"\r\n            margin=\"normal\"\r\n            name=\"city\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            value={values.city}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid>\r\n          <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n            \r\n            label=\"Job Description\"\r\n            margin=\"normal\"\r\n            name=\"jobDescription\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            value={values.jobDescription}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid>\r\n          <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n            \r\n            label=\"Weekly Performance\"\r\n            margin=\"normal\"\r\n            name=\"weeklyPerformance\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            value={values.weeklyPerformance}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid>\r\n        <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n        \r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid>\r\n          {/* <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n          <TextField\r\n            \r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n          </Grid> */}\r\n             {/* <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          /> */}\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick = {() => onSubmit()}\r\n          >\r\n            Add \r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EmployeeAdd;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst CustomerListResults = ({ customers, ...rest }) => {\r\n\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box sx={{ minWidth: 1050 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Address\r\n                </TableCell>\r\n                <TableCell>\r\n                  Job Description\r\n                </TableCell>\r\n                <TableCell>\r\n                 Weekly Performance\r\n                </TableCell>\r\n                <TableCell>\r\n                Action\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {`${customer.city}, ${customer.country}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.jobDescription}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.weeklyPerformance}\r\n                  </TableCell>\r\n                  <TableCell>\r\n      <Fab color=\"primary\" size=\"small\" aria-label=\"edit\" className={classes.margin}>\r\n        <EditIcon />\r\n      </Fab>\r\n      <Fab color=\"secondary\" size=\"small\" aria-label=\"delete\" className={classes.margin}>\r\n        <DeleteIcon />\r\n      </Fab>\r\n      \r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onPageChange={handlePageChange}\r\n        onRowsPerPageChange={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nCustomerListResults.propTypes = {\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default CustomerListResults;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\nimport { Navigate } from 'react-router';\r\n\r\nconst CustomerListToolbar = (props) => (\r\n  <Box {...props}>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n       onClick={Navigate('employee/add')}\r\n      >\r\n        Add employee\r\n      </Button>\r\n    </Box>\r\n\r\n  </Box>\r\n);\r\n\r\nexport default CustomerListToolbar;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport CustomerListResults from 'src/components/customer/CustomerListResults';\r\nimport CustomerListToolbar from 'src/components/customer/CustomerListToolbar';\r\nimport { useDispatch ,useSelector} from 'react-redux';\r\nimport { getEmployees } from 'src/services/employeeService';\r\nimport { useEffect } from 'react';\r\n\r\nconst EmployeeList = () => {\r\n\r\nconst dispatch =useDispatch();\r\nconst employeeData = useSelector((state) => state.employeeData);\r\nconst { loading, employees } = employeeData;\r\n\r\n  useEffect(()=>{\r\n    dispatch(getEmployees())\r\n  },[]);\r\n\r\n\r\n  return (\r\n  <>\r\n    <Helmet>\r\n      <title>Employee | Manage Employees</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <CustomerListToolbar />\r\n        <Box sx={{ pt: 3 }}>\r\n          <CustomerListResults customers={employees} />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n    }\r\n\r\nexport default EmployeeList;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { Box, Container, Grid, Button } from \"@material-ui/core\";\r\nimport Budget from \"src/components/dashboard//Budget\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport LatestOrders from \"src/components/dashboard//LatestOrders\";\r\nimport LatestProducts from \"src/components/dashboard//LatestProducts\";\r\nimport Sales from \"src/components/dashboard//Sales\";\r\nimport TasksProgress from \"src/components/dashboard//TasksProgress\";\r\nimport TotalCustomers from \"src/components/dashboard//TotalCustomers\";\r\nimport TrafficByDevice from \"src/components/dashboard//TrafficByDevice\";\r\nimport {\r\n  getDashboardData,\r\n  clockInEmployee,\r\n} from \"src/services/dashboardService\";\r\n\r\nconst EmployeeDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const dashboardData = useSelector((state) => state.dashboardData);\r\n  const { loading, dashboard } = dashboardData;\r\n\r\n  useEffect(() => {\r\n    dispatch(getDashboardData());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Dashboard | Employee </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 3,\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <Grid container spacing={3} top={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(clockInEmployee());\r\n              }}\r\n            >\r\n              Clock In\r\n            </Button>\r\n            &nbsp;&nbsp;\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Clock Out\r\n            </Button>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeDashboard;\r\n","import { Navigate } from \"react-router-dom\";\r\nimport DashboardLayout from \"src/components/DashboardLayout\";\r\nimport MainLayout from \"src/components/MainLayout\";\r\nimport Account from \"src/pages/Account\";\r\nimport Dashboard from \"src/pages/Dashboard\";\r\nimport Register from \"src/pages/Register\";\r\nimport Login from \"src/pages/Login\";\r\nimport EmployeeLogin from \"src/pages/EmployeeLogin\";\r\nimport NotFound from \"src/pages/NotFound\";\r\nimport ProductList from \"src/pages/ProductList\";\r\nimport Settings from \"src/pages/Settings\";\r\nimport EmployeeAdd from \"./components/customer/EmployeeAdd\";\r\nimport EmployeeList from \"./pages/EmployeeList\";\r\nimport EmployeeDashboard from \"./pages/EmployeeDashboard\";\r\nimport EmployeeListDashboard from \"./components/customer/EmployeeListDashboard\";\r\nconst routes = [\r\n  {\r\n    path: \"app\",\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: \"account\", element: <Account /> },\r\n      { path: \"employees\", element: <EmployeeList /> },\r\n      { path: \"addemployee\", element: <EmployeeAdd /> },\r\n      { path: \"dashboard\", element: <Dashboard /> },\r\n      { path: \"employeedashboard\", element: <EmployeeDashboard /> },\r\n      { path: \"products\", element: <ProductList /> },\r\n      { path: \"settings\", element: <Settings /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/\",\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: \"login\", element: <Login /> },\r\n      { path: \"employeelogin\", element: <EmployeeLogin /> },\r\n      { path: \"register\", element: <Register /> },\r\n      { path: \"404\", element: <NotFound /> },\r\n      { path: \"/\", element: <Navigate to=\"/login\" /> },\r\n      // { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","export const ADMIN_LOADING = \"ADMIN_LOADING\";\r\nexport const ADMIN_PASSWORD_RESET_SUCCESS = \"ADMIN_PASSWORD_RESET_SUCCESS\";\r\nexport const ADMIN_ERROR = \"ADMIN_ERROR\";\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { userSigninReducer } from \"../reducers/authReducer\";\r\nimport { userReducer } from \"../reducers/userReducer\";\r\nimport { dashboardReducer } from \"../reducers/dashboardReducer\";\r\nimport { employeeReducer } from \"../reducers/employeeReducer\";\r\nimport { adminReducer } from \"../reducers/adminReducer\";\r\n\r\n\r\nconst authState = localStorage.getItem(\"access_token\");\r\n\r\nconst initialState = {\r\n  userSignin: { authState },\r\n};\r\nconst reducer = combineReducers({\r\n  userSignin: userSigninReducer,\r\n  employeeData:employeeReducer,\r\n  dashboardData: dashboardReducer,\r\n  userData: userReducer,\r\n  adminData: adminReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import {\r\n  USER_SIGNIN_LOADING,\r\n  USER_LOGOUT,\r\n  USER_SIGNIN_ERROR,\r\n  USER_SIGNIN_SUCCESS,\r\n} from \"../utils/constants/userConstants\";\r\n\r\nfunction userSigninReducer(state = { loading: true }, action) {\r\n  switch (action.type) {\r\n    case USER_SIGNIN_LOADING:\r\n      return { loading: true };\r\n    case USER_SIGNIN_SUCCESS:\r\n      return { loading: false, authState: action.payload };\r\n    case USER_SIGNIN_ERROR:\r\n      return {\r\n        loading: false,\r\n      };\r\n    case USER_LOGOUT:\r\n      return { loading: false, authState: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { userSigninReducer };\r\n","import {\r\n  EMPLOYEE_LOADING,\r\n  EMPLOYEE_ERROR,\r\n  EMPLOYEE_GET_SUCCESS\r\n  } from \"../utils/constants/employeeConstants\";\r\n  \r\n\r\nfunction employeeReducer(\r\n  state = {\r\n    loading: false,\r\n    employees: [],\r\n    metadata: [],\r\n    employee: {},\r\n    redirect: false,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case EMPLOYEE_LOADING:\r\n      return { ...state, loading: true, redirect: false };\r\n    case EMPLOYEE_GET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        redirect: false,\r\n        employees: action.payload[0].employees,\r\n        metadata: action.payload[0].metadata,\r\n      };\r\n    case EMPLOYEE_ERROR:\r\n      return {\r\n        ...state,\r\n        redirect: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { employeeReducer };\r\n","import {\r\n  DASHBOARD_DATA_SUCCESS,\r\n  DASHBOARD_DATA_LOADING,\r\n  DASHBOARD_DATA_ERROR,\r\n} from \"../utils/constants/dashboardConstants\";\r\n\r\nfunction dashboardReducer(state = { loading: true, dashboard: [] }, action) {\r\n  switch (action.type) {\r\n    case DASHBOARD_DATA_LOADING:\r\n      return { loading: true, dashboard: [] };\r\n    case DASHBOARD_DATA_SUCCESS:\r\n      return { loading: false, dashboard: action.payload };\r\n    case DASHBOARD_DATA_ERROR:\r\n      return {\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { dashboardReducer };\r\n","import {\r\n  USER_SINGLE_SUCCESS,\r\n  USER_LIST_SUCCESS,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_STATUS_UPDATE_SUCCESS,\r\n  USER_ERROR,\r\n  USER_LOADING,\r\n} from \"../utils/constants/userConstants\";\r\n\r\nfunction userReducer(\r\n  state = { loading: true, users: [], metadata: [], redirect: false, user: {} },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    case USER_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        redirect: false,\r\n        users: action.payload[0].users,\r\n        metadata: action.payload[0].metadata,\r\n      };\r\n    case USER_SINGLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        redirect: false,\r\n        user: action.payload,\r\n      };\r\n    case USER_UPDATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        redirect: true,\r\n        users: [\r\n          ...state.users.filter((user) => user._id !== action.payload._id),\r\n          action.payload,\r\n        ],\r\n      };\r\n    case USER_STATUS_UPDATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: [\r\n          ...state.users.filter((user) => user._id !== action.payload._id),\r\n          action.payload,\r\n        ],\r\n      };\r\n    case USER_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: state.users.filter((user) => user._id !== action.payload._id),\r\n      };\r\n    case USER_ERROR:\r\n      return {\r\n        ...state,\r\n        redirect: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { userReducer };\r\n","import {\r\n  ADMIN_LOADING,\r\n  ADMIN_PASSWORD_RESET_SUCCESS,\r\n  ADMIN_ERROR,\r\n} from \"../utils/constants/adminConstants\";\r\n\r\nfunction adminReducer(\r\n  state = { loading: false, modalClose: false, admin: {} },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ADMIN_LOADING:\r\n      return { ...state, loading: true, modalClose: false };\r\n    case ADMIN_PASSWORD_RESET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        modalClose: true,\r\n        admin: action.payload,\r\n      };\r\n    case ADMIN_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        modalClose: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { adminReducer };\r\n","import axios from \"axios\";\r\nimport LocalStorageService from \"../../services/localstorageService\";\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst AxiosConfig = () => {\r\n  const localStorageService = LocalStorageService.getService();\r\n\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorageService.getAccessToken();\r\n      if (token) {\r\n        config.headers[\"Authorization\"] = token;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  axios.interceptors.response.use(\r\n    (response) => {\r\n      return response;\r\n    },\r\n    function (error) {\r\n      const originalRequest = error.config;\r\n      if (error.response.status === 400) {\r\n        swal({\r\n          title: \"Oops\",\r\n          text:error.response.data.message,\r\n          icon: \"error\",\r\n          button: \"Ok\",\r\n        });\r\n      }\r\n      if (\r\n        error.response.status === 401 &&\r\n        originalRequest.url === `/v1/admin/token`\r\n      ) {\r\n        return Promise.reject(error);\r\n      }\r\n\r\n      if (error.response.status === 401 && !originalRequest._retry) {\r\n        originalRequest._retry = true;\r\n        const refreshToken = localStorageService.getRefreshToken();\r\n        return axios\r\n          .post(\"/admin/token\", {\r\n            refresh_token: refreshToken,\r\n            \r\n          })\r\n          .then((res) => {\r\n            if (res.status === 201) {\r\n              localStorageService._setAccessToken(res.data.accessToken);\r\n              axios.defaults.headers.common[\r\n                \"Authorization\"\r\n              ] = localStorageService.getAccessToken();\r\n              return axios(originalRequest);\r\n            }\r\n          });\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport default AxiosConfig;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport { Provider } from \"react-redux\";\r\nimport { SnackbarProvider } from 'notistack';\r\nimport theme from 'src/theme';\r\n\r\nimport routes from 'src/routes';\r\nimport store from './store/store';\r\nimport AxiosConfig from \"./utils/responseHandling/AxiosConfig\";\r\nAxiosConfig();\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n  return (\r\n    <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n    <SnackbarProvider maxSnack={3}>\r\n      <GlobalStyles />\r\n      {routing}\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}